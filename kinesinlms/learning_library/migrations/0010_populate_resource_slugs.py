# Generated by Django 5.0.9 on 2024-11-28 01:09

from django.db import migrations
from django.utils.text import slugify


def populate_resource_slugs(apps, schema_editor):
    Resource = apps.get_model("learning_library", "Resource")

    for resource in Resource.objects.all():
        if resource.resource_file:
            # Get filename without extension
            filename = resource.resource_file.name.split("/")[-1]
            base_name = filename.rsplit(".", 1)[0]

            # Create base slug
            base_slug = slugify(base_name)

            # Handle potential duplicates
            slug = base_slug
            counter = 1
            while Resource.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1

            resource.slug = slug
        else:
            # Fallback for resources without files
            resource.slug = f"resource-{resource.id}"

        resource.save()


def reverse_resource_slugs(apps, schema_editor):
    Resource = apps.get_model("learning_library", "Resource")
    Resource.objects.all().update(slug=None)


class Migration(migrations.Migration):
    dependencies = [
        ("learning_library", "0009_resource_slug"),
    ]

    operations = [
        migrations.RunPython(
            populate_resource_slugs,
            reverse_resource_slugs,
        ),
    ]
