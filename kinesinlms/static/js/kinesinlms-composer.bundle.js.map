{"version":3,"file":"kinesinlms-composer.bundle.js","mappings":"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","sources":["webpack://kinesinlms/./kinesinlms/static/src/composer.ts"],"sourcesContent":["// Javascript for the composer app.\n// Note that it's assumed project.js will always be present and loaded before\n// this file, so we don't need to include here the libraries and styles\n// that are imported in project.js.\n\n\n// TODO: The current implementation is rough...and so lame. Refactor all of this to proper javscript modules.\n\nimport { update } from \"lodash\";\nimport { Simulate } from \"react-dom/test-utils\";\n\ndeclare const tinyMCE: any;\ndeclare const Alpine: any;\n\n\n// Set up HTMX for composer\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/**\n *  Set up HTMX for composer.\n */\ndocument.body.addEventListener('htmx:configRequest', (event) => {\n\n    if (!event) {\n        console.error(\"htmx:configRequest event is null\", event);\n        return;\n    }\n\n    const customEvent: CustomEvent = event as CustomEvent;\n    const blockID: string = customEvent.detail.target.id;\n\n    if (blockID.includes(\"block-edit-form-\") || blockID.includes(\"course-unit-block-\")) {\n\n        // If this block has HTML_CONTENT or QUESTION_TEXT fields in it,\n        // and WYSIWYG is enabled, we need to make sure to run TinyMCE\n        // so that it collects rich text before calling the API.\n\n        if (!tinyMCE || !tinyMCE.activeEditor) {\n            console.log(\"We're editing raw HTML so no need to copy content from TinyMCE...\");\n            return;\n        }\n        console.log(\"Copying content from TinyMCE before making HTMx request...\");\n\n        const inputVarNames: string[] = [\"html_content\", \"question_text\"];\n\n        inputVarNames.forEach(inputVarName => {\n\n            const customEvent: CustomEvent = event as CustomEvent;\n            if (customEvent.detail && inputVarName in customEvent.detail.parameters) {\n                // Get the rich HTML and use it to replace the plain\n                // text that currently exists in the outgoing request...\n                const inputID = `id_${inputVarName}`;\n                const richContentEditor = tinyMCE.get(inputID);\n                if (!richContentEditor) {\n                    console.error(`Could not find element with ID ${inputID}`);\n                    return;\n                }\n                customEvent.detail.parameters[inputVarName] = richContentEditor.getContent();\n            }\n        })\n\n    }\n\n\n})\n\n\n// Set up Alpine data stores for composer\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/** Set up Alpine data stores for composer. */\ndocument.addEventListener('alpine:init', () => {\n    Alpine.store('isEditingBlock', false);\n    Alpine.store('isEditingCourseUnitInfo', false);\n    console.log(\"Alpine init\");\n})\n\n\n// Composer events\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n/**\n * Listen for HTMx event that a course unit's \"info\" form is\n * being edited. When this happens we want to disable other controls\n * on the page.\n */\n\ndocument.body.addEventListener('editCourseUnitInfoActivated', function (evt) {\n    console.log(\"editCourseUnitInfoActivated\", evt);\n    Alpine.store('isEditingCourseUnitInfo', true);\n    klmsToggleDisableReadOnlyBlockControls(true);\n});\n\ndocument.body.addEventListener('editCourseUnitInfoDeactivated', function (evt) {\n    console.log(\"editCourseUnitInfoDeactivated\", evt);\n    Alpine.store('isEditingCourseUnitInfo', false);\n    klmsToggleDisableReadOnlyBlockControls(false);\n});\n\n\ninterface editBlockPanelActivatedEvent extends Event {\n    detail: {\n        block_id: number;\n        current_panel_slug: string;\n        // Add other properties if needed\n    };\n}\n\n/**\n * Listen for HTMx event that indicates a block is\n * being edited in a block edit panel. When this happens we want to disable\n * other controls on the page.\n */\ndocument.body.addEventListener('editBlockPanelActivated', function (evt: Event) {\n    Alpine.store('isEditingBlock', true);\n    console.log(\"editBlockPanelActivated\", evt);\n    const eventDetail = (evt as editBlockPanelActivatedEvent).detail;\n    klmsInitPanelForm(eventDetail.block_id, eventDetail.current_panel_slug);\n    klmsToggleDisableReadOnlyBlockControls(true);\n});\n\n/**\n * Listen for HTMx event that indicates a block is\n * no longer being edited. When this happens we want to enable\n * other controls on the page.\n */\ndocument.body.addEventListener('editBlockPanelDeactivated', function (evt) {\n    Alpine.store('isEditingBlock', false);\n    klmsToggleDisableReadOnlyBlockControls(false);\n});\n\n/**\n * \n * klmsToggleDisableReadOnlyBlockControls()\n * \n * Toggle the disabled state and visual style of controls for read-only blocks.\n *\n * We do this when a block is being edited in a panel, and we want to turn off\n * all other controls so the user can focus on the block they're editing (and\n * the other controls don't get the page into a bad state).\n *\n * @param isDisabled - Boolean indicating whether to disable or enable the controls.\n *\n */\nfunction klmsToggleDisableReadOnlyBlockControls(isDisabled: boolean = false) {\n\n    console.log(\"Disabling read-only block controls: \", isDisabled)\n\n    // Disable course unit info controls\n    const editCourseUnitInfoButton: HTMLButtonElement | null = document.getElementById(\"btn-edit-course-unit-info\") as HTMLButtonElement;\n    if (editCourseUnitInfoButton) {\n        editCourseUnitInfoButton.classList.toggle(\"disabled\", isDisabled);\n    }\n\n    // Disable toggle WYSIWYG button\n    const toggleWYSIWYGButton: HTMLButtonElement | null = document.getElementById(\"btn-toggle-wysiwyg\") as HTMLButtonElement;\n    if (toggleWYSIWYGButton) {\n        toggleWYSIWYGButton.classList.toggle(\"disabled\", isDisabled);\n    }\n\n    // Disable add block buttons\n    const addBlockAtEndButton: HTMLButtonElement | null = document.getElementById(\"btn-add-block-end\") as HTMLButtonElement;\n    if (addBlockAtEndButton) {\n        console.log(\"Disabling add block at end button: \", addBlockAtEndButton);\n        addBlockAtEndButton.classList.toggle(\"disabled\", isDisabled);\n    }\n    const addBlockButtons: NodeListOf<Element> = document.querySelectorAll(\".connector-add-block-button\");\n    addBlockButtons.forEach(button => {\n        console.log(\"Disabling add block button: \", button);\n        button.classList.toggle(\"disabled\", isDisabled);\n    })\n\n    // Disable all header controls in read-only blocks.\n    const readOnlyBlocks: NodeListOf<Element> = document.querySelectorAll(\".block-edit-card-read-only\");\n    readOnlyBlocks.forEach(block => {\n        const querySelectors: string[] = [\n            \".btn-block-edit\",\n            \".btn-block-delete\",\n            \".btn-block-move-up\",\n            \".btn-block-move-down\",\n            \".connector-add-block-button\",\n        ];\n        querySelectors.forEach(selector => {\n            const control: HTMLElement | null = block.querySelector(selector) as HTMLElement;\n            if (control) {\n                console.log(\"Disabling control: \", control);\n                control.classList.toggle(\"disabled\", isDisabled);\n            }\n        })\n    })\n}\n\n/*\n* klmsUpdateTextWithNewImageURL()\n* If the user has dragged an image onto the editor, and we have\n* successfully create a new CourseResource on the server, it's time\n* to update the content in the editor with an image tag pointing to the\n* newly created resouce.\n* We have to do this in either raw HTML or TinyMCE, depending on which \n* is currently active.\n*/\n\nfunction klmsUpdateTextWithNewImageURL(imageURL: string) {\n    console.log(\"klmsUpdateTextWithNewImageURL: \", imageURL)\n\n    const newImageTag = `<img src=\"${imageURL}\" alt=\"image\" />`;\n    // We need a ref to the raw HTML textarea regardless of whether\n    // it or TinyMCE is active...\n    const htmlContentTAElem = document.getElementById(`id_html_content`) as HTMLTextAreaElement;\n\n    // Update either TinyMCE or raw HTML textarea with new image tag.\n    if (tinyMCE && tinyMCE.activeEditor) {\n        console.log(\"TinyMCE is active. Updating with img tag...\")\n        const activeEditor = tinyMCE.activeEditor;\n        const cursorPos = activeEditor.selection.getRng();\n        activeEditor.selection.setContent(newImageTag);\n        console.log(\"Dispatching 'change' event from \", activeEditor);\n    } else {\n        console.log(\"Raw HTML textarea is active. Updating with img tag...\")\n        if (!htmlContentTAElem) {\n            return;\n        }\n        const cursorPos = htmlContentTAElem.selectionStart;\n        const textBefore = htmlContentTAElem.value.substring(0, cursorPos);\n        const textAfter = htmlContentTAElem.value.substring(cursorPos);\n        htmlContentTAElem.value = `${textBefore}\\n${newImageTag}\\n${textAfter}`;\n    }\n\n    // Regardless of whether we're in TinyMCE or raw HTML, we need to\n    // dispatch a change event so that the form knows the content has changed.\n    console.log(\"Dispatching 'change' event from \", htmlContentTAElem);\n    // That change event should cause the Save/Done buttons to toggle\n    htmlContentTAElem.dispatchEvent(new Event('change', { bubbles: true }));\n\n}\n\nfunction klmsUploadCourseResourceFile(file: any, courseID: string, blockID: string) {\n    console.log(\"klmsUploadCourseResourceFile: \", file, courseID, blockID);\n    const formData = new FormData();\n    formData.append('resource_file', file);\n    formData.append('type', 'IMAGE');\n    // AJAX request to upload file\n    const xhr = new XMLHttpRequest();\n\n    // Extract CSRF token from the body tag's hx-headers attribute.\n    // We set it there for HTMx, and although we're not doing an HTMx\n    // request here, we can still get the token from the same place.\n    const csrfToken = document.body.getAttribute('hx-headers');\n    let token = '';\n    if (csrfToken) {\n        try {\n            const headers = JSON.parse(csrfToken);\n            token = headers['X-CSRFToken'] || '';\n        } catch (e) {\n            console.error('Failed to parse CSRF token:', e);\n        }\n    }\n    console.log(\"csrfToken: \", csrfToken);\n\n    const uploadURL = `/composer/course/${courseID}/block/${blockID}/upload_course_resource/`;\n    xhr.open('POST', uploadURL, true);\n    xhr.setRequestHeader('X-CSRFToken', token);\n    const errMessage = 'Error occurred during upload. Please try again, or manually add the resource on the \"Resources\" tab.';\n    xhr.onload = function () {\n        if (xhr.status === 201) {\n            const response = JSON.parse(xhr.responseText);\n            console.log(\"Upload successful: \", xhr.responseText);\n            const imageURL = response.resource_url;\n            klmsUpdateTextWithNewImageURL(imageURL);\n        } else {\n            window.alert(errMessage);\n            console.error('Upload failed:', xhr.status);\n        }\n    };\n    xhr.onerror = function () {\n        window.alert(errMessage);\n    };\n    xhr.send(formData);\n}\n\nfunction klmsHTMLContentOnDragEnter(event: DragEvent) {\n    console.log(\"klmsHTMLContentOnDragEnter\");\n    event.preventDefault();\n    event.stopPropagation();\n    const dropZoneElem = document.getElementById(\"image_drop_zone\") as HTMLTextAreaElement;\n    if (!dropZoneElem) {\n        return\n    }\n    dropZoneElem.classList.add('drag-drop-highlight');\n}\n\nfunction klmsHTMLContentOnDragOver(event: DragEvent) {\n    console.log(\"klmsHTMLContentOnDragOver\");\n    event.preventDefault();\n    event.stopPropagation();\n    const dropZoneElem = document.getElementById(\"image_drop_zone\") as HTMLTextAreaElement;\n    if (!dropZoneElem) {\n        return\n    }\n    dropZoneElem.classList.add('drag-drop-highlight');\n}\n\nfunction klmsHTMLContentOnDragLeave(event: DragEvent) {\n    console.log(\"klmsHTMLContentOnDragLeave\");\n    event.preventDefault();\n    event.stopPropagation();\n    const dropZoneElem = document.getElementById(\"image_drop_zone\") as HTMLTextAreaElement;\n    if (!dropZoneElem) {\n        return;\n    }\n    dropZoneElem.classList.remove('drag-drop-highlight');\n}\n\nfunction klmsHTMLContentOnDrop(event: DragEvent) {\n    console.log(\"klmsHTMLContentOnDrop\");\n    event.preventDefault();\n    event.stopPropagation();\n    const dropZoneElem = document.getElementById(\"image_drop_zone\") as HTMLTextAreaElement;\n    if (!dropZoneElem) {\n        return;\n    }\n    dropZoneElem.classList.remove('drag-drop-highlight');\n    console.log(\"dropZoneElem: \", dropZoneElem);\n    console.log(\"dropZoneElem.dataset: \", dropZoneElem.dataset);\n    const courseID = dropZoneElem.dataset.courseId;\n    const blockID = dropZoneElem.dataset.blockId;\n    console.log(\"drop event. blockID: \", blockID);\n    console.log(\"drop event. blockIcourseIDD: \", courseID);\n    const dt = event.dataTransfer;\n    if (dt && courseID && blockID) {\n        const files = dt.files;\n        console.log(\"files: \", files);\n        Array.from(files).forEach(file => {\n            console.log(\"uploading file: \", file);\n            klmsUploadCourseResourceFile(file, courseID, blockID);\n        });\n    }\n}\n\n\n/* \n*\n* initComposerImageDropZone()\n* \n* Allow the author to drag and drop images into the composer \n* textarea. This action will\n* 1) upload image and create a CourseResource instance\n* and\n* 2) have the image URL automatically added to the html content.\n*\n*/\n\nfunction klmsInitComposerImageDropZone() {\n\n    const dropZoneElem = document.getElementById(\"image_drop_zone\") as HTMLTextAreaElement;\n\n    if (!dropZoneElem) {\n        // This panel probs doesn't have an HTML Content field and the\n        // accompanying drop zone.\n        return;\n    }\n\n    // Remove any existing event listeners\n    dropZoneElem.removeEventListener(\"dragenter\", klmsHTMLContentOnDragEnter, false);\n    dropZoneElem.removeEventListener(\"dragover\", klmsHTMLContentOnDragOver, false);\n    dropZoneElem.removeEventListener(\"dragleave\", klmsHTMLContentOnDragLeave, false);\n    dropZoneElem.removeEventListener(\"drop\", klmsHTMLContentOnDrop, false);\n\n    // Prevent default drag behaviors\n    dropZoneElem.addEventListener(\"dragenter\", klmsHTMLContentOnDragEnter, false);\n    dropZoneElem.addEventListener(\"dragover\", klmsHTMLContentOnDragOver, false);\n    dropZoneElem.addEventListener(\"dragleave\", klmsHTMLContentOnDragLeave, false);\n    dropZoneElem.addEventListener(\"drop\", klmsHTMLContentOnDrop, false);\n\n}\n\n\n/* Panels */\n\n// TODO: Break out into separate modules and/or classes\n\n/**\n * klmsInitPanelForm()\n * \n * This function is called when a panel for editing a block has been \n * loaded via an HTMx call and is now being activated.\n *\n * It initializes the panel's form and sets up event listeners\n * to manage the \"Save\" and \"Done\" buttons disabled states, as well as the disabled\n * state of the tabs in the panel set.\n *\n * This is all in an effort to keep a user on a particular\n * pane AND tab until they've saved their work.\n */\nfunction klmsInitPanelForm(blockID: number, currentPanelSlug: string) {\n\n    // Get reference to form and submit button\n    const panelFormID: string = `panel-form-${blockID}-${currentPanelSlug}`;\n    const panelForm: HTMLFormElement = document.getElementById(panelFormID) as HTMLFormElement;\n    if (!panelForm) {\n        console.error(\"Could not find DOM element\", panelFormID);\n        return;\n    }\n\n    // Remove existing event listeners to avoid duplication\n    panelForm.removeEventListener('change', onPanelFormChange);\n    panelForm.removeEventListener('wysiwyg_change', onPanelFormChange);\n\n    // Some panels do not certain buttons, like the \"Save\" button.\n    const submitButtonID: string = `btn-save-panel-${blockID}-${currentPanelSlug}`;\n    const submitButton: HTMLButtonElement | null = document.getElementById(submitButtonID) as HTMLButtonElement;\n    if (submitButton) {\n        // Disable the submit button initially\n        submitButton.disabled = true;\n    } else {\n        console.info(\"Could not find DOM element\", submitButtonID);\n    }\n\n    const doneButtonID: string = `btn-done-panel-${blockID}-${currentPanelSlug}`;\n    const doneButton: HTMLButtonElement | null = document.getElementById(doneButtonID) as HTMLButtonElement;\n    if (doneButton) {\n        console.info(\"Could not find DOM element\", doneButtonID);\n    }\n\n    const cancelButtonID = `btn-cancel-panel-${blockID}-${currentPanelSlug}`;\n    const cancelButton: HTMLButtonElement | null = document.getElementById(cancelButtonID) as HTMLButtonElement;\n    if (!cancelButton) {\n        console.info(\"Could not find DOM element\", cancelButtonID);\n    }\n\n    // Serialize initial form data\n    const initialFormData: URLSearchParams = new URLSearchParams(new FormData(panelForm!) as any);\n\n    function onPanelFormChange(event: Event) {\n        console.log(\"Panel form changed! event: \", event);\n\n        // If user is using raw HTML content, we check to see if content has changed.\n        // But if they're using TinyMCE...not sure yet how to check for changes, so just assume\n        // content is different.\n\n        let hasChanged: boolean = true;\n        if (tinyMCE && tinyMCE.activeEditor) {\n            // Leave hasChanged as true. We'll always assume content has changed.\n        } else {\n            const currentFormData: URLSearchParams = new URLSearchParams(new FormData(panelForm) as any);\n            hasChanged = currentFormData.toString() !== initialFormData.toString();\n        }\n\n        // Enable/disable submit button based on form changes\n        if (submitButton) {\n            submitButton.disabled = !hasChanged;\n            submitButton.classList.toggle(\"d-none\", !hasChanged);\n            if (hasChanged) {\n                submitButton.focus();\n            }\n        }\n        if (doneButton) {\n            doneButton!.disabled = hasChanged;\n            doneButton.classList.toggle(\"d-none\", hasChanged);\n        }\n        if (cancelButton) {\n            cancelButton!.classList.toggle(\"d-none\", !hasChanged);\n        }\n        // Enable/disable tabs on panelset\n        const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(`#panel-navs-${blockID} button.nav-link`);\n\n        // Loop through each button and set the 'disabled' attribute\n        buttons.forEach(button => {\n            button.disabled = hasChanged;\n        });\n    }\n\n    // Check for changes in the form fields. When there's a change\n    // update the various UI elements in the panel and panel set accordingly.\n    panelForm.addEventListener('change', onPanelFormChange, false);\n    panelForm.addEventListener('wysiwyg_change', onPanelFormChange, false);\n\n    klmsInitComposerImageDropZone();\n\n}\n\nfunction klmsDestroyCurrentPanelForm() {\n    console.log(\"klmsDestroyCurrentPanelForm()\");\n    if (tinyMCE) {\n        console.log(\"Destroying TinyMCE...\");\n        tinyMCE.remove();\n    }\n}\n\n(window as any).klmsInitComposerImageDropZone = klmsInitComposerImageDropZone;\n(window as any).klmsHTMLContentOnDragEnter = klmsHTMLContentOnDragEnter;\n(window as any).klmsHTMLContentOnDragOver = klmsHTMLContentOnDragOver;\n(window as any).klmsHTMLContentOnDragLeave = klmsHTMLContentOnDragLeave;\n(window as any).klmsHTMLContentOnDrop = klmsHTMLContentOnDrop;\n(window as any).klmsDestroyCurrentPanelForm = klmsDestroyCurrentPanelForm;\n"],"names":[],"sourceRoot":""}