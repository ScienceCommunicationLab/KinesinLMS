# Generated by Django 5.0.6 on 2024-08-05 10:04

import django.db.models.deletion
import django_react_templatetags.mixins
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("course", "0001_initial"),
        ("learning_library", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SimpleInteractiveToolTemplate",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tool_type",
                    models.CharField(
                        blank=True,
                        choices=[("DIAGRAM", "Diagram"), ("TABLETOOL", "TableTool")],
                        default=None,
                        help_text="The type of SimpleInteractiveTool this template is for.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, help_text="Unique slug for template", max_length=40, null=True, unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of this SimpleInteractiveTool template (not shown to student).",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Description of this SimpleInteractiveTool template and its purpose (not shown to student).",
                    ),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Instructions for student on how to work with  this particular SimpleInteractiveTool template.",
                    ),
                ),
                ("definition", models.JSONField(blank=True, null=True)),
                (
                    "template_json",
                    models.JSONField(
                        blank=True,
                        help_text="A complete JSON definition of the SimpleInteractiveTool template",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_react_templatetags.mixins.RepresentationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SimpleInteractiveTool",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=400, null=True)),
                (
                    "tool_type",
                    models.CharField(
                        blank=True,
                        choices=[("DIAGRAM", "Diagram"), ("TABLETOOL", "TableTool")],
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                ("slug", models.SlugField(allow_unicode=True, unique=True)),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Instructions and/or extra information about this SimpleInteractiveTool to display to the student.",
                    ),
                ),
                ("definition", models.JSONField(blank=True, null=True)),
                ("graded", models.BooleanField(blank=True, default=False)),
                ("max_score", models.IntegerField(default=1)),
                (
                    "block",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="simple_interactive_tool",
                        to="learning_library.block",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_react_templatetags.mixins.RepresentationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SimpleInteractiveToolSubmission",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("UNANSWERED", "Unanswered"), ("INCOMPLETE", "Incomplete"), ("COMPLETE", "Complete")],
                        default="UNANSWERED",
                        max_length=50,
                    ),
                ),
                ("score", models.PositiveIntegerField(blank=True, default=1)),
                ("json_content", models.JSONField(blank=True, null=True)),
                (
                    "course",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="simple_interactive_tool_submissions",
                        to="course.course",
                    ),
                ),
                (
                    "simple_interactive_tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="sits.simpleinteractivetool",
                    ),
                ),
            ],
        ),
    ]
