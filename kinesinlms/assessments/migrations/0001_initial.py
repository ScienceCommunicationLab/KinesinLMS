# Generated by Django 5.0.6 on 2024-08-05 10:04

import django_react_templatetags.mixins
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Assessment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "label",
                    models.CharField(blank=True, help_text="A label for the assessment.", max_length=255, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LONG_FORM_TEXT", "Long-form text"),
                            ("MULTIPLE_CHOICE", "Multiple choice"),
                            ("POLL", "Poll"),
                            ("DONE_INDICATOR", "Done indicator"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                ("slug", models.SlugField(allow_unicode=True, blank=True, null=True)),
                ("question", models.TextField(blank=True, null=True)),
                ("question_as_statement", models.TextField(blank=True, null=True)),
                ("definition_json", models.JSONField(blank=True, null=True)),
                ("solution_json", models.JSONField(blank=True, null=True)),
                ("explanation", models.TextField(blank=True, null=True)),
                ("show_answer", models.BooleanField(blank=True, default=True)),
                ("show_slug", models.BooleanField(blank=True, default=True)),
                (
                    "complete_mode",
                    models.CharField(
                        choices=[
                            ("ALWAYS_ENABLED", "Always enabled"),
                            ("DISABLED_ON_COMPLETE", "Disabled on complete"),
                        ],
                        default="DISABLED_ON_COMPLETE",
                        help_text="Describes how an Assessment behaves when a student completes it.",
                        max_length=50,
                    ),
                ),
                ("attempts_allowed", models.IntegerField(blank=True, default=None, null=True)),
                ("has_correct_answer", models.BooleanField(blank=True, default=False, null=True)),
                ("graded", models.BooleanField(blank=True, default=False)),
                ("max_score", models.PositiveIntegerField(default=1)),
            ],
            options={
                "abstract": False,
            },
            bases=(django_react_templatetags.mixins.RepresentationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SubmittedAnswer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UNANSWERED", "Unanswered"),
                            ("INCOMPLETE", "Incomplete"),
                            ("COMPLETE", "Complete"),
                            ("CORRECT", "Correct"),
                            ("INCORRECT", "Incorrect"),
                        ],
                        default="Unanswered",
                        max_length=50,
                    ),
                ),
                ("attempts", models.IntegerField(blank=True, default=1)),
                ("score", models.PositiveIntegerField(blank=True, default=1)),
                ("json_content", models.JSONField(blank=True, null=True)),
                ("html_content", models.TextField(blank=True, null=True)),
            ],
        ),
    ]
